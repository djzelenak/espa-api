
import api.domain.sensor as sn


class BaseValidationSchema(object):

    formats = {'gtiff': 'GeoTiff',
               'envi': 'ENVI',
               'hdf-eos2': 'HDF-EOS2',
               'netcdf': 'NetCDF'}

    resampling_methods = {'nn': 'Nearest Neighbor',
                          'bil': 'Bilinear Interpolation',
                          'cc': 'Cubic Convolution'}

    projections = {'aea': {'type': 'object',
                           'title': 'Albers Equal Area',
                           'pixel_units': ('meters', 'dd'),
                           'display_rank': 0,
                           'properties': {'standard_parallel_1': {'type': 'number',
                                                                  'title': '1st Standard Parallel',
                                                                  'display_rank': 2,
                                                                  'required': True,
                                                                  'minimum': -90,
                                                                  'maximum': 90},
                                          'standard_parallel_2': {'type': 'number',
                                                                  'title': '2nd Standard Parallel',
                                                                  'display_rank': 3,
                                                                  'required': True,
                                                                  'minimum': -90,
                                                                  'maximum': 90},
                                          'central_meridian': {'type': 'number',
                                                               'title': 'Central Meridian',
                                                               'display_rank': 1,
                                                               'required': True,
                                                               'minimum': -180,
                                                               'maximum': 180},
                                          'latitude_of_origin': {'type': 'number',
                                                                 'title': 'Latitude of Origin',
                                                                 'display_rank': 0,
                                                                 'required': True,
                                                                 'minimum': -90,
                                                                 'maximum': 90},
                                          'false_easting': {'type': 'number',
                                                            'title': 'False Easting (meters)',
                                                            'display_rank': 4,
                                                            'required': True},
                                          'false_northing': {'type': 'number',
                                                             'title': 'False Northing (meters)',
                                                             'display_rank': 5,
                                                             'required': True},
                                          'datum': {'type': 'string',
                                                    'title': 'Datum',
                                                    'required': True,
                                                    'display_rank': 6,
                                                    'enum': {'wgs84': 'World Geodetic System 1984',
                                                             'nad27': 'North American Datum 1927',
                                                             'nad83': 'North American Datum 1983'}}}},
                   'utm': {'type': 'object',
                           'pixel_units': ('meters', 'dd'),
                           'display_rank': 1,
                           'title': 'Universal Transverse Mercator',
                           'properties': {'zone': {'type': 'integer',
                                                   'title': 'UTM Grid Zone Number',
                                                   'display_rank': 0,
                                                   'required': True,
                                                   'minimum': 1,
                                                   'maximum': 60},
                                          'zone_ns': {'type': 'string',
                                                      'title': 'UTM Hemisphere',
                                                      'display_rank': 1,
                                                      'required': True,
                                                      'enum': {'north': 'North', 'south': 'South'}}}},
                   'lonlat': {'type': 'null',
                              'pixel_units': ('dd',),
                              'title': 'Geographic',
                              'display_rank': 2},
                   'sinu': {'type': 'object',
                            'title': 'Sinusoidal',
                            'pixel_units': ('meters', 'dd'),
                            'display_rank': 3,
                            'properties': {'central_meridian': {'type': 'number',
                                                                'title': 'Central Meridian',
                                                                'display_rank': 0,
                                                                'required': True,
                                                                'minimum': -180,
                                                                'maximum': 180},
                                           'false_easting': {'type': 'number',
                                                             'title': 'False Easting (meters)',
                                                             'display_rank': 1,
                                                             'required': True},
                                           'false_northing': {'type': 'number',
                                                              'title': 'False Northing (meters)',
                                                              'display_rank': 2,
                                                              'required': True}}},
                   'ps': {'type': 'object',
                          'title': 'Polar Stereographic',
                          'pixel_units': ('meters', 'dd'),
                          'display_rank': 4,
                          'properties': {'longitudinal_pole': {'type': 'number',
                                                               'title': 'Longitudinal Pole',
                                                               'display_rank': 0,
                                                               'required': True,
                                                               'minimum': -180,
                                                               'maximum': 180},
                                         'latitude_true_scale': {'type': 'number',
                                                                 'title': 'Latitude True Scale',
                                                                 'display_rank': 1,
                                                                 'required': True,
                                                                 'abs_rng': (60, 90)},
                                         'false_easting': {'type': 'number',
                                                           'title': 'False Easting (meters)',
                                                           'display_rank': 2,
                                                           'required': True},
                                         'false_northing': {'type': 'number',
                                                            'title': 'False Northing (meters)',
                                                            'display_rank': 3,
                                                            'required': True}}}}

    extents = {'north': {'type': 'number',
                         'title': 'Upper left Y coordinate',
                         'display_rank': 2,
                         'required': True},
               'south': {'type': 'number',
                         'title': 'Lower right Y coordinate',
                         'display_rank': 4,
                         'required': True},
               'east': {'type': 'number',
                        'title': 'Lower right X coordinate',
                        'display_rank': 3,
                        'required': True},
               'west': {'type': 'number',
                        'title': 'Upper left X coordinate',
                        'display_rank': 1,
                        'required': True},
               'units': {'type': 'string',
                         'title': 'Coordinate system units',
                         'display_rank': 0,
                         'required': True,
                         'enum': {'dd': 'Decimal Degrees', 'meters': 'Meters'}}}

    resize = {'pixel_size': {'type': 'number',
                             'title': 'Pixel Size',
                             'display_rank': 0,
                             'required': True,
                             'ps_dd_rng': (0.0002695, 0.0449155),
                             'ps_meters_rng': (30, 5000)},
              'pixel_size_units': {'type': 'string',
                                   'title': 'Pixel Size Units',
                                   'display_rank': 1,
                                   'required': True,
                                   'enum': {'dd': 'Decimal Degrees', 'meters': 'Meters'}}}

    request_schema = {'type': 'object',
                      'set_ItemCount': ('inputs', 5000),
                      'extents': 200000000,
                      'properties': {'projection': {'properties': projections,
                                                    'type': 'object',
                                                    'title': 'Reproject Products',
                                                    'display_rank': 1,
                                                    'single_obj': True},
                                     'image_extents': {'type': 'object',
                                                       'title': 'Modify Image Extents',
                                                       'display_rank': 2,
                                                       'properties': extents,
                                                       'dependencies': ['projection']},
                                     'format': {'type': 'string',
                                                'title': 'Output Format',
                                                'display_rank': 0,
                                                'required': True,
                                                'enum': formats},
                                     'resize': {'type': 'object',
                                                'title': 'Pixel Resizing',
                                                'display_rank': 3,
                                                'properties': resize},
                                     'resampling_method': {'type': 'string',
                                                           'title': 'Resample Method',
                                                           'display_rank': 4,
                                                           'enum': resampling_methods},
                                     'plot_statistics': {'type': 'boolean',
                                                         'title': 'Plot Output Product Statistics'},
                                     'note': {'type': 'string',
                                              'title': 'Order Description (optional)',
                                              'required': False,
                                              'blank': True}}}

    _sensor_reg = sn.SensorCONST.instances
    sensor_schema = {}
    for key in _sensor_reg:
        sensor_schema[key] = {'type': 'object',
                              'properties': {'inputs': {'type': 'array',
                                                        'required': True,
                                                        'ItemCount': 'inputs',
                                                        'uniqueItems': True,
                                                        'minItems': 1,
                                                        'items': {'type': 'string',
                                                                  'pattern': _sensor_reg[key][0]}},
                                             'products': {'type': 'array',
                                                          'uniqueItems': True,
                                                          'required': True,
                                                          'restricted': True,
                                                          'stats': True,
                                                          'minItems': 1,
                                                          'items': {'type': 'string',
                                                                    'enum': sn.instance(
                                                                        _sensor_reg[key][2]).products}}}}

    request_schema['properties'].update(sensor_schema)
    request_schema['oneormoreobjects'] = list(sensor_schema.keys())

    valid_params = {'formats': {'formats': formats},
                    'resampling_methods': {'resampling_methods': resampling_methods},
                    'projections': projections}
